@model PaginatedList<Pharmacy_app.Areas.Admin.Models.Faq>

@{
    ViewData["Title"] = "Index";
}
<head>
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<div class="wrapperdashboard">
<h1 class="text-body-secondary">FAQs Management Dashboard</h1>
<h5>(Sort, Search, Filter, Paggination)</h5>

<br />
<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<br />
</div>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Kerko ne baze te pyetjes: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
            <a asp-action="Index">Kthehu te Lista</a>
        </p>
    </div>
</form>
<table class="table table-hover">
    <thead>
        <tr class="table-info">
            <th width="30%">
                <a style="color:white;" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Question &#x2193;</a>
            </th>
            <th width="50%">
                Answer
            </th width="20%">
            <th>Action Buttons</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Question)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Answer)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-outline-warning">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-info">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-outline-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


<div style="display:flex;justify-content:space-evenly;align-items:center">
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-dark @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-dark @nextDisabled">
    Next
</a>

    </div>